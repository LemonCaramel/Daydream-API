From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: LemonCaramel <admin@caramel.moe>
Date: Tue, 5 Sep 2023 15:32:52 +0900
Subject: [PATCH] Add EntityPotionTickEvent


diff --git a/src/main/java/moe/caramel/daydream/event/entity/EntityPotionTickEvent.java b/src/main/java/moe/caramel/daydream/event/entity/EntityPotionTickEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..b4fd75ca48c95956687c94be36ee0f63be82b644
--- /dev/null
+++ b/src/main/java/moe/caramel/daydream/event/entity/EntityPotionTickEvent.java
@@ -0,0 +1,62 @@
+package moe.caramel.daydream.event.entity;
+
+import org.bukkit.entity.LivingEntity;
+import org.bukkit.event.Cancellable;
+import org.bukkit.event.HandlerList;
+import org.bukkit.event.entity.EntityEvent;
+import org.bukkit.potion.PotionEffectType;
+import org.jetbrains.annotations.NotNull;
+
+/**
+ * 포션 이펙트가 Tick 할 때 호출됩니다.
+ */
+public final class EntityPotionTickEvent extends EntityEvent implements Cancellable {
+
+    private static final HandlerList HANDLER_LIST = new HandlerList();
+    public @NotNull HandlerList getHandlers() { return HANDLER_LIST; }
+    public static @NotNull HandlerList getHandlerList() { return HANDLER_LIST; }
+
+    private final PotionEffectType type;
+    private final int amplifier;
+    private boolean cancelled;
+
+    public EntityPotionTickEvent(@NotNull LivingEntity what, @NotNull PotionEffectType type, final int amplifier) {
+        super(what);
+        this.type = type;
+        this.amplifier = amplifier;
+    }
+
+    @Override
+    public @NotNull LivingEntity getEntity() {
+        return (LivingEntity) entity;
+    }
+
+    /**
+     * 포션 이펙트의 타입을 가져옵니다.
+     *
+     * @return 포션 이펙트의 타입
+     */
+    @NotNull
+    public PotionEffectType getType() {
+        return type;
+    }
+
+    /**
+     * 포션 이펙트의 강도를 가져옵니다.
+     *
+     * @return 포션 이펙트의 강도
+     */
+    public int getAmplifier() {
+        return amplifier;
+    }
+
+    @Override
+    public boolean isCancelled() {
+        return cancelled;
+    }
+
+    @Override
+    public void setCancelled(boolean cancel) {
+        this.cancelled = cancel;
+    }
+}
