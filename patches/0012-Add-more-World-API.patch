From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: LemonCaramel <admin@caramel.moe>
Date: Sun, 8 Aug 2021 22:10:59 +0900
Subject: [PATCH] Add more World API


diff --git a/src/main/java/org/bukkit/World.java b/src/main/java/org/bukkit/World.java
index 6917931966377c51db88a3364997a110dd987970..dc21e16cb266b1b7bae5f4029fa4565d8fa22c91 100644
--- a/src/main/java/org/bukkit/World.java
+++ b/src/main/java/org/bukkit/World.java
@@ -150,6 +150,16 @@ public interface World extends RegionAccessor, WorldInfo, PluginMessageRecipient
     @NotNull
     public Block getHighestBlockAt(@NotNull Location location);
 
+    // Daydream start - Add more World API
+    /**
+     * 특정 범위 내에 블록이 있는지 확인합니다.
+     *
+     * @param boundingBox 확인할 범위
+     * @return 만약 범위 내에 블록이 있다면 {@code false}를 반환
+     */
+    boolean noBlocksAround(@NotNull BoundingBox boundingBox);
+    // Daydream end - Add more World API
+
     // Paper start - Add heightmap API
     /**
      * Returns the highest block's y-coordinate at the specified block coordinates that match the specified heightmap's conditions.
@@ -3215,6 +3225,38 @@ public interface World extends RegionAccessor, WorldInfo, PluginMessageRecipient
      */
     void playSound(@NotNull Location location, @NotNull String sound, @NotNull SoundCategory category, float volume, float pitch);
 
+    // Daydream start - Add More World API (Sound)
+    /**
+     * Play a Sound at the provided Location in the World.
+     * <p>
+     * This function will fail silently if Location or Sound are null.
+     *
+     * @param except The except player
+     * @param location The location to play the sound
+     * @param sound The sound to play
+     * @param category the category of the sound
+     * @param volume The volume of the sound
+     * @param pitch The pitch of the sound
+     */
+    void playSound(@NotNull Player except, @NotNull Location location, @NotNull Sound sound, @NotNull SoundCategory category, float volume, float pitch);
+
+    /**
+     * Play a Sound at the provided Location in the World.
+     * <p>
+     * This function will fail silently if Location or Sound are null. No sound
+     * will be heard by the players if their clients do not have the respective
+     * sound for the value passed.
+     *
+     * @param except The except player
+     * @param location The location to play the sound
+     * @param sound The internal sound name to play
+     * @param category The category of the sound
+     * @param volume The volume of the sound
+     * @param pitch The pitch of the sound
+     */
+    void playSound(@NotNull Player except, @NotNull Location location, @NotNull String sound, @NotNull SoundCategory category, float volume, float pitch);
+    // Daydream end - Add More World API (Sound)
+
     /**
      * Play a Sound at the location of the provided entity in the World.
      * <p>
diff --git a/src/main/java/org/bukkit/block/Block.java b/src/main/java/org/bukkit/block/Block.java
index 41b7310a514bf4d42c501e4bffe04008bda2541f..a9f7d144ae4a64b5b2089f889995434c993fcdb4 100644
--- a/src/main/java/org/bukkit/block/Block.java
+++ b/src/main/java/org/bukkit/block/Block.java
@@ -590,6 +590,20 @@ public interface Block extends Metadatable, Translatable, net.kyori.adventure.tr
      */
     boolean breakNaturally(@NotNull ItemStack tool, boolean triggerEffect, boolean dropExperience);
 
+    // Daydream start - Add more World API
+    /**
+     * Breaks the block and spawns items as if a player had digged it with a
+     * specific tool
+     *
+     * @param tool The tool or item in hand used for digging
+     * @param triggerEffect Play the block break particle effect and sound
+     * @param dropExperience drop exp if the block normally does so
+     * @param dropItem Item Drop
+     * @return true if the block was destroyed
+     */
+    boolean breakNaturally(@NotNull ItemStack tool, boolean triggerEffect, boolean dropExperience, boolean dropItem);
+    // Daydream end - Add more World API
+
     /**
      * Causes the block to be ticked, this is different from {@link Block#randomTick()},
      * in that it is usually scheduled to occur, for example
diff --git a/src/main/java/org/bukkit/util/StructureSearchResult.java b/src/main/java/org/bukkit/util/StructureSearchResult.java
index 129c14ef4a89bcd14b31343a756773bde43d48ab..765b19eeed25d858251b2769d2d4b7b22a2c81d5 100644
--- a/src/main/java/org/bukkit/util/StructureSearchResult.java
+++ b/src/main/java/org/bukkit/util/StructureSearchResult.java
@@ -29,4 +29,14 @@ public interface StructureSearchResult {
      */
     @NotNull
     Location getLocation();
+
+    // Daydream start - Add more World API
+    /**
+     * Return the bounding box of the structure.
+     *
+     * @return the bounding box the structure was found.
+     */
+    @NotNull
+    BoundingBox getBoundingBox();
+    // Daydream end - Add more World API
 }
