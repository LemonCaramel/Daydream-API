From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: LemonCaramel <admin@caramel.moe>
Date: Fri, 6 Aug 2021 20:08:04 +0900
Subject: [PATCH] Add more Player API


diff --git a/build.gradle.kts b/build.gradle.kts
index 2f67716a3bdb82c96fc7e6541f8a07b5daa42da0..9be8981d930323a9f88be2f13b6e1b0d98b34c0d 100644
--- a/build.gradle.kts
+++ b/build.gradle.kts
@@ -45,6 +45,7 @@ dependencies {
         exclude("io.papermc.paper", "paper-api")
     }
     // Daydream end
+    api("com.mojang:authlib:2.3.31") // Daydream - Mojang Authlib (keep in sync with major MC versions)
 
     implementation("org.ow2.asm:asm:9.1")
     implementation("org.ow2.asm:asm-commons:9.1")
diff --git a/src/main/java/moe/caramel/daydream/network/PlayerInfoTypes.java b/src/main/java/moe/caramel/daydream/network/PlayerInfoTypes.java
new file mode 100644
index 0000000000000000000000000000000000000000..0f6fdaa64bf4b23998b5303b8daa664003e41079
--- /dev/null
+++ b/src/main/java/moe/caramel/daydream/network/PlayerInfoTypes.java
@@ -0,0 +1,13 @@
+package moe.caramel.daydream.network;
+
+/**
+ * This is the enum type used for PlayerInfo packets.
+ */
+public enum PlayerInfoTypes {
+
+    ADD_PLAYER,
+    UPDATE_GAME_MODE,
+    UPDATE_LATENCY,
+    UPDATE_DISPLAY_NAME,
+    REMOVE_PLAYER
+}
diff --git a/src/main/java/org/bukkit/entity/Player.java b/src/main/java/org/bukkit/entity/Player.java
index 9a6e410206852029f1fea0c4409352d5743dcf64..4ca6e77638391a2d0491bb8a09f41bcaca1ac7fa 100644
--- a/src/main/java/org/bukkit/entity/Player.java
+++ b/src/main/java/org/bukkit/entity/Player.java
@@ -525,6 +525,15 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
      */
     public boolean breakBlock(@NotNull Block block);
 
+    // Daydream start
+    /**
+     * Send packet
+     *
+     * @param packet The packet instance
+     */
+    public void sendPacket(@NotNull Object packet);
+    // Daydream end
+
     /**
      * Send a block change. This fakes a block change packet for a user at a
      * certain location. This will not actually change the world in any way.
@@ -1328,6 +1337,17 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
      */
     public void showPlayer(@NotNull Plugin plugin, @NotNull Player player);
 
+    // Daydream start
+    /**
+     * Resend the target's info packet to this player.
+     * It's useful when changing a player's skin.
+     *
+     * @param type The type of packet
+     * @param targets Target players
+     */
+    public void sendPlayerInfo(@NotNull moe.caramel.daydream.network.PlayerInfoTypes type, @NotNull java.util.List<Player> targets);
+    // Daydream end
+
     /**
      * Checks to see if a player has been hidden from this player
      *
@@ -1968,6 +1988,24 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
         return net.kyori.adventure.text.event.HoverEvent.showEntity(op.apply(net.kyori.adventure.text.event.HoverEvent.ShowEntity.of(this.getType().getKey(), this.getUniqueId(), this.displayName())));
     }
 
+    // Daydream start
+    /**
+     * Send a change game state packet to this player
+     *
+     * @param reason Reason Value
+     * @param value Value
+     */
+    void sendChangeGameState(int reason, int value);
+
+    /**
+     * Send a CustomPayload packet to this player
+     *
+     * @param channel channel Value
+     * @param value Value
+     */
+    void sendCustomPayload(@NotNull org.bukkit.NamespacedKey channel, @NotNull String value);
+    // Daydream end
+
     /**
      * Request that the player's client download and switch resource packs.
      * <p>
@@ -2070,6 +2108,13 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
     @Nullable
     org.bukkit.event.player.PlayerResourcePackStatusEvent.Status getResourcePackStatus();
 
+    // Daydream start
+    /**
+     * @param status resource pack status
+     */
+    void setResourcePackStatus(@NotNull org.bukkit.event.player.PlayerResourcePackStatusEvent.Status status);
+    // Daydream end
+
     /**
      * @return the most recent resource pack hash received from the player,
      *         or null if no hash has ever been received from this player.
@@ -2093,6 +2138,15 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
     @NotNull
     PlayerProfile getPlayerProfile();
 
+    // Daydream start
+    /**
+     * Gets this players profile
+     * @return The players profile object
+     */
+    @NotNull
+    com.mojang.authlib.GameProfile getProfile();
+    // Daydream end
+
     /**
      * Changes the PlayerProfile for this player. This will cause this player
      * to be reregistered to all clients that can currently see this player
