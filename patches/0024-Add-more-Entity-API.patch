From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: LemonCaramel <admin@caramel.moe>
Date: Sun, 2 Jul 2023 14:40:50 +0900
Subject: [PATCH] Add more Entity API


diff --git a/src/main/java/org/bukkit/entity/Entity.java b/src/main/java/org/bukkit/entity/Entity.java
index 53405025bbf6f23ce28a95c003c2ffb0ec180408..46c2343284cc34a89fa8fadc355cbc506731f5b9 100644
--- a/src/main/java/org/bukkit/entity/Entity.java
+++ b/src/main/java/org/bukkit/entity/Entity.java
@@ -111,6 +111,17 @@ public interface Entity extends Metadatable, CommandSender, Nameable, Persistent
      */
     public boolean isInWater();
 
+    // Daydream start - Add more Entity API (Fluid Height)
+    /**
+     * 플레이어 위치의 유체 높이를 가져옵니다.
+     *
+     * @param fluid 유체 타입
+     * @return 유체의 높이
+     * @throws IllegalArgumentException 인자로 {@link org.bukkit.Fluid#EMPTY}를 전달할 경우 던져집니다.
+     */
+    public double getFluidHeight(@NotNull org.bukkit.Fluid fluid);
+    // Daydream end - Add more Entity API (Fluid Height)
+
     /**
      * Gets the current world this entity resides in
      *
@@ -365,6 +376,33 @@ public interface Entity extends Metadatable, CommandSender, Nameable, Persistent
     void lockFreezeTicks(boolean locked);
     // Paper end - Freeze Tick Lock API
 
+    // Daydream start - Add more Entity API (Disable Entity Update)
+    /**
+     * 엔티티 업데이트 비활성화를 예약합니다.
+     * <p>엔티티 업데이트가 완료된 후에 다음 틱 시간부터 업데이트를 하지 않습니다.</p>
+     */
+    @ApiStatus.Experimental
+    void scheduleDisableEntityUpdate();
+
+    /**
+     * 엔티티 업데이트 중지 여부를 가져옵니다.
+     * <p>활성화 시, 위치 보정 및 엔티티 데이터 업데이트가 중지됩니다.</p>
+     *
+     * @return 엔티티 업데이트 중지 여부
+     */
+    @ApiStatus.Experimental
+    boolean disableEntityUpdate();
+
+    /**
+     * 엔티티 업데이트 중지 여부를 설정합니다.
+     * <p>활성화 시, 위치 보정 및 엔티티 데이터 업데이트가 중지됩니다.</p>
+     *
+     * @param disable 엔티티 업데이트 중지 여부
+     */
+    @ApiStatus.Experimental
+    void disableEntityUpdate(final boolean disable);
+    // Daydream end - Add more Entity API (Disable Entity Update)
+
     /**
      * Mark the entity's removal.
      *
@@ -528,6 +566,16 @@ public interface Entity extends Metadatable, CommandSender, Nameable, Persistent
     @NotNull
     public UUID getUniqueId();
 
+    // Daydream start - Add more Entity API (getStringUniqueId)
+    /**
+     * Returns a unique and persistent string id for this entity
+     *
+     * @return string unique id
+     */
+    @NotNull
+    public String getStringUniqueId();
+    // Daydream end - Add more Entity API (getStringUniqueId)
+
     // Daydream start - Add Packet API
     /**
      * Gets the metadata of the entity.
diff --git a/src/main/java/org/bukkit/entity/LivingEntity.java b/src/main/java/org/bukkit/entity/LivingEntity.java
index 65112eae8b92344796850b1e4c89e75443eab2fe..ad87cf3189bde14df38d0e68b51788e03589aabd 100644
--- a/src/main/java/org/bukkit/entity/LivingEntity.java
+++ b/src/main/java/org/bukkit/entity/LivingEntity.java
@@ -696,6 +696,32 @@ public interface LivingEntity extends Attributable, Damageable, ProjectileSource
     public boolean hasLineOfSight(@NotNull Location location);
     // Paper end
 
+    // Daydream start - Add more Entity API (getSeenPercent)
+    /**
+     * 특정 위치에서 이 엔티티를 어느 정도 보고 있는지 가져옵니다.
+     *
+     * @param location 위치
+     * @param expand 확장할 히트박스의 크기
+     * @param instantReturn 즉시 반환 여부, 이 값이 {@code true}라면 이 엔티티가 조금이라도 보일 때 {@code 1.0f}를 즉시 반환합니다.
+     * @return 엔티티가 보이는 정도
+     */
+    default float getSeenPercent(@NotNull Location location, double expand, boolean instantReturn) {
+        return getSeenPercent(location.x(), location.y(), location.z(), expand, instantReturn);
+    }
+
+    /**
+     * 특정 위치에서 이 엔티티를 어느 정도 보고 있는지 가져옵니다.
+     *
+     * @param x 이 엔티티를 바라볼 x 위치
+     * @param y 이 엔티티를 바라볼 y 위치
+     * @param z 이 엔티티를 바라볼 z 위치
+     * @param expand 확장할 히트박스의 크기
+     * @param instantReturn 즉시 반환 여부, 이 값이 {@code true}라면 이 엔티티가 조금이라도 보일 때 {@code 1.0f}를 즉시 반환합니다.
+     * @return 엔티티가 보이는 정도
+     */
+    public float getSeenPercent(double x, double y, double z, double expand, boolean instantReturn);
+    // Daydream end - Add more Entity API (getSeenPercent)
+
     /**
      * Returns if the living entity despawns when away from players or not.
      * <p>
