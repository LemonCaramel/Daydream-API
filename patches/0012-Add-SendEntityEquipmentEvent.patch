From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: LemonCaramel <admin@caramel.moe>
Date: Tue, 23 Nov 2021 03:59:14 +0900
Subject: [PATCH] Add SendEntityEquipmentEvent


diff --git a/src/main/java/moe/caramel/daydream/event/packet/SendEntityEquipmentEvent.java b/src/main/java/moe/caramel/daydream/event/packet/SendEntityEquipmentEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..8dcf5e4a73a0742b9caa26ffb4c24fe86b3ffc24
--- /dev/null
+++ b/src/main/java/moe/caramel/daydream/event/packet/SendEntityEquipmentEvent.java
@@ -0,0 +1,89 @@
+package moe.caramel.daydream.event.packet;
+
+import org.bukkit.entity.Entity;
+import org.bukkit.entity.Player;
+import org.bukkit.event.Cancellable;
+import org.bukkit.event.HandlerList;
+import org.bukkit.event.entity.EntityEvent;
+import org.bukkit.inventory.EquipmentSlot;
+import org.bukkit.inventory.ItemStack;
+import org.jetbrains.annotations.ApiStatus;
+import org.jetbrains.annotations.NotNull;
+import java.util.Map;
+
+/**
+ * Entity Equipment 패킷이 전송될 때 호출되는 이벤트
+ */
+public final class SendEntityEquipmentEvent extends EntityEvent implements Cancellable {
+
+    private static final HandlerList HANDLER_LIST = new HandlerList();
+    public @NotNull HandlerList getHandlers() { return HANDLER_LIST; }
+    public static @NotNull HandlerList getHandlerList() { return HANDLER_LIST; }
+
+    private final Reason reason;
+    private final Player target;
+    private final Map<EquipmentSlot, ItemStack> data;
+    private boolean cancelled;
+
+    @ApiStatus.Internal
+    public SendEntityEquipmentEvent(final @NotNull Entity source, final @NotNull Reason reason, final @NotNull Player target, final @NotNull Map<EquipmentSlot, ItemStack> data) {
+        super(source);
+        this.reason = reason;
+        this.target = target;
+        this.data = data;
+    }
+
+    /**
+     * 이벤트 호출 사유를 가져옵니다.
+     *
+     * @return 이벤트 호출 사유
+     */
+    @NotNull
+    public Reason getReason() {
+        return reason;
+    }
+
+    /**
+     * 이 패킷의 전송 대상을 반환합니다.
+     *
+     * @return 패킷 전송 대상
+     */
+    @NotNull
+    public Player getTarget() {
+        return target;
+    }
+
+    /**
+     * 전송 예정인 장비 목록을 반환하며, 목록을 수정할 수 있습니다.
+     *
+     * @return 장비 목록
+     */
+    @NotNull
+    public Map<EquipmentSlot, ItemStack> getData() {
+        return data;
+    }
+
+    @Override
+    public boolean isCancelled() {
+        return cancelled;
+    }
+
+    @Override
+    public void setCancelled(final boolean cancel) {
+        this.cancelled = cancel;
+    }
+
+    /**
+     * 이벤트 호출 사유
+     */
+    public enum Reason {
+        /**
+         * 대상 엔티티를 추적하기 시작했을 때
+         */
+        PAIRING,
+        /**
+         * 엔티티가 장비를 업데이트했을 때
+         */
+        UPDATE_EQUIPMENT
+    }
+}
