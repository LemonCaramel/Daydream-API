From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: LemonCaramel <admin@caramel.moe>
Date: Mon, 19 Feb 2024 00:28:31 +0900
Subject: [PATCH] Add Early Loader


diff --git a/src/main/java/moe/caramel/daydream/EarlyLoader.java b/src/main/java/moe/caramel/daydream/EarlyLoader.java
new file mode 100644
index 0000000000000000000000000000000000000000..7f1cf074c3362602b2594a1c9036edf51f4f72ad
--- /dev/null
+++ b/src/main/java/moe/caramel/daydream/EarlyLoader.java
@@ -0,0 +1,39 @@
+package moe.caramel.daydream;
+
+import org.bukkit.UnsafeValues;
+import org.bukkit.inventory.ItemFactory;
+import org.bukkit.inventory.meta.ItemMeta;
+import org.jetbrains.annotations.ApiStatus;
+import org.jetbrains.annotations.NotNull;
+import java.util.ServiceLoader;
+
+/**
+ * Early Loader.
+ */
+public interface EarlyLoader {
+
+    /**
+     * Early Loader Instance
+     */
+    @NotNull
+    EarlyLoader LOADER = ServiceLoader
+        .load(EarlyLoader.class, EarlyLoader.class.getClassLoader())
+        .findFirst().orElseThrow();
+
+    /**
+     * Gets the instance of the item factory (for {@link ItemMeta}).
+     *
+     * @return the item factory
+     * @see ItemFactory
+     */
+    @NotNull
+    ItemFactory getItemFactory();
+
+    /**
+     * @return the unsafe values instance
+     * @see UnsafeValues
+     */
+    @NotNull
+    @ApiStatus.Experimental
+    UnsafeValues getUnsafe();
+}
diff --git a/src/main/java/org/bukkit/Bukkit.java b/src/main/java/org/bukkit/Bukkit.java
index 6fb081b03458ae5460185c9556de1dcd9753ecda..86e4b05771ef945b161002d776fbc9e3fa49fb48 100644
--- a/src/main/java/org/bukkit/Bukkit.java
+++ b/src/main/java/org/bukkit/Bukkit.java
@@ -2150,7 +2150,7 @@ public final class Bukkit {
      */
     @NotNull
     public static ItemFactory getItemFactory() {
-        return server.getItemFactory();
+        return (server == null) ? moe.caramel.daydream.EarlyLoader.LOADER.getItemFactory() : server.getItemFactory(); // Daydream - Fix errors that occur when early load
     }
 
     /**
@@ -2599,7 +2599,7 @@ public final class Bukkit {
     @Deprecated
     @NotNull
     public static UnsafeValues getUnsafe() {
-        return server.getUnsafe();
+        return (server == null) ? moe.caramel.daydream.EarlyLoader.LOADER.getUnsafe() : server.getUnsafe(); // Daydream - Fix errors that occur when early load
     }
 
 
diff --git a/src/main/java/org/bukkit/inventory/ItemStack.java b/src/main/java/org/bukkit/inventory/ItemStack.java
index e55f7c30a3426cdf412bbdac7ec9ed3f3ea3f23d..b016e9ab2646cb8ee3781a0b49f73d7e4d648fc3 100644
--- a/src/main/java/org/bukkit/inventory/ItemStack.java
+++ b/src/main/java/org/bukkit/inventory/ItemStack.java
@@ -775,13 +775,13 @@ public class ItemStack implements Cloneable, ConfigurationSerializable, Translat
      */
     @NotNull
     public ItemStack enchantWithLevels(final @org.jetbrains.annotations.Range(from = 1, to = 30) int levels, final boolean allowTreasure, final @NotNull java.util.Random random) {
-        return Bukkit.getServer().getItemFactory().enchantWithLevels(this, levels, allowTreasure, random);
+        return Bukkit.getItemFactory().enchantWithLevels(this, levels, allowTreasure, random); // Daydream - Fix errors that occur when early load
     }
 
     @NotNull
     @Override
     public net.kyori.adventure.text.event.HoverEvent<net.kyori.adventure.text.event.HoverEvent.ShowItem> asHoverEvent(final @NotNull java.util.function.UnaryOperator<net.kyori.adventure.text.event.HoverEvent.ShowItem> op) {
-        return org.bukkit.Bukkit.getServer().getItemFactory().asHoverEvent(this, op);
+        return org.bukkit.Bukkit.getItemFactory().asHoverEvent(this, op); // Daydream - Fix errors that occur when early load
     }
 
     /**
@@ -790,7 +790,7 @@ public class ItemStack implements Cloneable, ConfigurationSerializable, Translat
      * @return display name of the {@link ItemStack}
      */
     public net.kyori.adventure.text.@NotNull Component displayName() {
-        return Bukkit.getServer().getItemFactory().displayName(this);
+        return Bukkit.getItemFactory().displayName(this); // Daydream - Fix errors that occur when early load
     }
 
     /**
@@ -803,7 +803,7 @@ public class ItemStack implements Cloneable, ConfigurationSerializable, Translat
      */
     @NotNull
     public ItemStack ensureServerConversions() {
-        return Bukkit.getServer().getItemFactory().ensureServerConversions(this);
+        return Bukkit.getItemFactory().ensureServerConversions(this); // Daydream - Fix errors that occur when early load
     }
 
     /**
@@ -842,7 +842,7 @@ public class ItemStack implements Cloneable, ConfigurationSerializable, Translat
     @Nullable
     @Deprecated
     public String getI18NDisplayName() {
-        return Bukkit.getServer().getItemFactory().getI18NDisplayName(this);
+        return Bukkit.getItemFactory().getI18NDisplayName(this); // Daydream - Fix errors that occur when early load
     }
 
     public int getMaxItemUseDuration() {
