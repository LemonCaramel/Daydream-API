From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: LemonCaramel <admin@caramel.moe>
Date: Sun, 8 Aug 2021 22:10:59 +0900
Subject: [PATCH] Add more World API


diff --git a/src/main/java/org/bukkit/World.java b/src/main/java/org/bukkit/World.java
index 567a36a4887da8994c9170e2885aa8cc357efa0c..7e741dc01079fad85455e9637766fb418b35ffa7 100644
--- a/src/main/java/org/bukkit/World.java
+++ b/src/main/java/org/bukkit/World.java
@@ -175,6 +175,16 @@ public interface World extends RegionAccessor, WorldInfo, PluginMessageRecipient
     @NotNull
     public Block getHighestBlockAt(@NotNull Location location);
 
+    // Daydream start - Add more World API
+    /**
+     * 특정 범위 내에 블록이 있는지 확인합니다.
+     *
+     * @param boundingBox 확인할 범위
+     * @return 만약 범위 내에 블록이 있다면 {@code false}를 반환
+     */
+    boolean noBlocksAround(@NotNull BoundingBox boundingBox);
+    // Daydream end - Add more World API
+
     // Paper start - Add heightmap API
     /**
      * Returns the highest block's y-coordinate at the specified block coordinates that match the specified heightmap's conditions.
@@ -3317,6 +3327,38 @@ public interface World extends RegionAccessor, WorldInfo, PluginMessageRecipient
      */
     void playSound(@NotNull Location location, @NotNull String sound, @NotNull SoundCategory category, float volume, float pitch);
 
+    // Daydream start - Add More World API (Sound)
+    /**
+     * Play a Sound at the provided Location in the World.
+     * <p>
+     * This function will fail silently if Location or Sound are null.
+     *
+     * @param except The except player
+     * @param location The location to play the sound
+     * @param sound The sound to play
+     * @param category the category of the sound
+     * @param volume The volume of the sound
+     * @param pitch The pitch of the sound
+     */
+    void playSound(@NotNull Player except, @NotNull Location location, @NotNull Sound sound, @NotNull SoundCategory category, float volume, float pitch);
+
+    /**
+     * Play a Sound at the provided Location in the World.
+     * <p>
+     * This function will fail silently if Location or Sound are null. No sound
+     * will be heard by the players if their clients do not have the respective
+     * sound for the value passed.
+     *
+     * @param except The except player
+     * @param location The location to play the sound
+     * @param sound The internal sound name to play
+     * @param category The category of the sound
+     * @param volume The volume of the sound
+     * @param pitch The pitch of the sound
+     */
+    void playSound(@NotNull Player except, @NotNull Location location, @NotNull String sound, @NotNull SoundCategory category, float volume, float pitch);
+    // Daydream end - Add More World API (Sound)
+
     /**
      * Play a Sound at the provided Location in the World. For sounds with multiple
      * variations passing the same seed will always play the same variation.
diff --git a/src/main/java/org/bukkit/block/Block.java b/src/main/java/org/bukkit/block/Block.java
index 49974558799830d827f9ccd65a8bafee3fb0376b..9e3d77480f119ce4ffd7b3e5a34c97a651b7305f 100644
--- a/src/main/java/org/bukkit/block/Block.java
+++ b/src/main/java/org/bukkit/block/Block.java
@@ -590,6 +590,20 @@ public interface Block extends Metadatable, Translatable, net.kyori.adventure.tr
      */
     boolean breakNaturally(@NotNull ItemStack tool, boolean triggerEffect, boolean dropExperience);
 
+    // Daydream start - Add more World API
+    /**
+     * Breaks the block and spawns items as if a player had digged it with a
+     * specific tool
+     *
+     * @param tool The tool or item in hand used for digging
+     * @param triggerEffect Play the block break particle effect and sound
+     * @param dropExperience drop exp if the block normally does so
+     * @param dropItem Item Drop
+     * @return true if the block was destroyed
+     */
+    boolean breakNaturally(@NotNull ItemStack tool, boolean triggerEffect, boolean dropExperience, boolean dropItem);
+    // Daydream end - Add more World API
+
     /**
      * Causes the block to be ticked, this is different from {@link Block#randomTick()},
      * in that it is usually scheduled to occur, for example
diff --git a/src/main/java/org/bukkit/util/StructureSearchResult.java b/src/main/java/org/bukkit/util/StructureSearchResult.java
index 129c14ef4a89bcd14b31343a756773bde43d48ab..05dec9d6faf9b4c343ac235a79b7b15cb96ee348 100644
--- a/src/main/java/org/bukkit/util/StructureSearchResult.java
+++ b/src/main/java/org/bukkit/util/StructureSearchResult.java
@@ -29,4 +29,14 @@ public interface StructureSearchResult {
      */
     @NotNull
     Location getLocation();
+
+    // Daydream start - Add more World API
+    /**
+     * 구조물의 경계 상자를 가져옵니다.
+     *
+     * @return 구조물의 경계 상자
+     */
+    @NotNull
+    BoundingBox getBoundingBox();
+    // Daydream end - Add more World API
 }
