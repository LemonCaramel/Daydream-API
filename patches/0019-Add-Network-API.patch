From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: LemonCaramel <admin@caramel.moe>
Date: Mon, 18 Apr 2022 21:05:06 +0900
Subject: [PATCH] Add Network API


diff --git a/build.gradle.kts b/build.gradle.kts
index 997ce2f408fee37bb38d2bff4e401878baac00cf..53a249043025ac64a03623030667dbf68ea0db2e 100644
--- a/build.gradle.kts
+++ b/build.gradle.kts
@@ -54,6 +54,7 @@ dependencies {
     api("com.mojang:authlib:3.3.39") // Daydream - Mojang Authlib (keep in sync with major MC versions)
     api("moe.caramel:acacia-user:1.0.1-proto") // Daydream - caramel.moe Network
     api("com.neovisionaries:nv-i18n:1.29") // Daydream - add GeoIP
+    api("io.netty:netty-all:4.1.79.Final") // Daydream - add Network API
 
     compileOnly("org.apache.maven:maven-resolver-provider:3.8.4")
     compileOnly("org.apache.maven.resolver:maven-resolver-connector-basic:1.7.2")
diff --git a/src/main/java/moe/caramel/daydream/network/MojangByteBuf.java b/src/main/java/moe/caramel/daydream/network/MojangByteBuf.java
new file mode 100644
index 0000000000000000000000000000000000000000..21fde661e12417b1af155cfcb747140b249e4c63
--- /dev/null
+++ b/src/main/java/moe/caramel/daydream/network/MojangByteBuf.java
@@ -0,0 +1,158 @@
+package moe.caramel.daydream.network;
+
+import io.netty.buffer.ByteBuf;
+import it.unimi.dsi.fastutil.ints.IntList;
+import net.kyori.adventure.text.Component;
+import org.bukkit.NamespacedKey;
+import org.bukkit.inventory.ItemStack;
+import org.jetbrains.annotations.NotNull;
+import org.jetbrains.annotations.Nullable;
+import java.util.BitSet;
+import java.util.Collection;
+import java.util.Date;
+import java.util.List;
+import java.util.Map;
+import java.util.Optional;
+import java.util.UUID;
+import java.util.function.BiConsumer;
+import java.util.function.Consumer;
+import java.util.function.Function;
+import java.util.function.IntFunction;
+
+/**
+ * Mojang's ByteBuf wrapper class.
+ *
+ * Doesn't provide Javadoc; because the method name is specific.
+ */
+public abstract class MojangByteBuf extends ByteBuf {
+
+    public static final short MAX_STRING_LENGTH = 32767;
+    public static final int MAX_COMPONENT_STRING_LENGTH = 262144;
+
+    @NotNull
+    public abstract <T, C extends Collection<T>> C readCollection(@NotNull IntFunction<C> collectionFactory, @NotNull Function<MojangByteBuf, T> entryParser);
+
+    @NotNull
+    public abstract <T> MojangByteBuf writeCollection(@NotNull Collection<T> collection, @NotNull BiConsumer<MojangByteBuf, T> entrySerializer);
+
+    @NotNull
+    public abstract <T> List<T> readList(@NotNull Function<MojangByteBuf, T> entryParser);
+
+    @NotNull
+    public abstract IntList readIntIdList();
+
+    @NotNull
+    public abstract MojangByteBuf writeIntIdList(@NotNull IntList list);
+
+    @NotNull
+    public abstract <K, V, M extends Map<K, V>> M readMap(@NotNull IntFunction<M> mapFactory, @NotNull Function<MojangByteBuf, K> keyParser, @NotNull Function<MojangByteBuf, V> valueParser);
+
+    @NotNull
+    public abstract <K, V> Map<K, V> readMap(@NotNull Function<MojangByteBuf, K> keyParser, @NotNull Function<MojangByteBuf, V> valueParser);
+
+    @NotNull
+    public abstract <K, V> MojangByteBuf writeMap(@NotNull Map<K, V> map, @NotNull BiConsumer<MojangByteBuf, K> keySerializer, @NotNull BiConsumer<MojangByteBuf, V> valueSerializer);
+
+    @NotNull
+    public abstract void readWithCount(@NotNull Consumer<MojangByteBuf> consumer);
+
+    @NotNull
+    public abstract <T> MojangByteBuf writeOptional(@NotNull Optional<T> value, @NotNull BiConsumer<MojangByteBuf, T> serializer);
+
+    @NotNull
+    public abstract <T> Optional<T> readOptional(@NotNull Function<MojangByteBuf, T> parser);
+
+    @NotNull
+    public abstract byte[] readByteArray();
+
+    @NotNull
+    public abstract byte[] readByteArray(int maxSize);
+
+    @NotNull
+    public abstract MojangByteBuf writeByteArray(@NotNull byte[] array);
+
+    @NotNull
+    public abstract int[] readVarIntArray();
+
+    @NotNull
+    public abstract int[] readVarIntArray(int maxSize);
+
+    @NotNull
+    public abstract MojangByteBuf writeVarIntArray(@NotNull int[] array);
+
+    @NotNull
+    public abstract long[] readLongArray();
+
+    @NotNull
+    public abstract long[] readLongArray(@Nullable long[] toArray);
+
+    @NotNull
+    public abstract long[] readLongArray(@Nullable long[] toArray, int maxSize);
+
+    @NotNull
+    public abstract MojangByteBuf writeLongArray(@NotNull long[] array);
+
+    @NotNull
+    public abstract Component readComponent();
+
+    @NotNull
+    public abstract MojangByteBuf writeComponent(@NotNull Component component);
+
+    @NotNull
+    public abstract <E extends Enum<E>> E readEnum(@NotNull Class<E> enumClass);
+
+    @NotNull
+    public abstract MojangByteBuf writeEnum(@NotNull Enum<?> instance);
+
+    public abstract int readVarInt();
+
+    @NotNull
+    public abstract MojangByteBuf writeVarInt(int value);
+
+    public abstract long readVarLong();
+
+    @NotNull
+    public abstract MojangByteBuf writeVarLong(long value);
+
+    @NotNull
+    public abstract UUID readUUID();
+
+    @NotNull
+    public abstract MojangByteBuf writeUUID(@NotNull UUID uuid);
+
+    @NotNull
+    public abstract ItemStack readItem();
+
+    @NotNull
+    public abstract MojangByteBuf writeItem(@NotNull ItemStack stack);
+
+    @NotNull
+    public abstract String readUtf();
+
+    @NotNull
+    public abstract String readUtf(int maxLength);
+
+    @NotNull
+    public abstract MojangByteBuf writeUtf(@NotNull String string);
+
+    @NotNull
+    public abstract MojangByteBuf writeUtf(@NotNull String string, int maxLength);
+
+    @NotNull
+    public abstract NamespacedKey readResourceLocation();
+
+    @NotNull
+    public abstract MojangByteBuf writeResourceLocation(@NotNull NamespacedKey key);
+
+    @NotNull
+    public abstract Date readDate();
+
+    @NotNull
+    public abstract MojangByteBuf writeDate(@NotNull Date date);
+
+    @NotNull
+    public abstract BitSet readBitSet();
+
+    @NotNull
+    public abstract MojangByteBuf writeBitSet(@NotNull BitSet bitSet);
+}
diff --git a/src/main/java/org/bukkit/UnsafeValues.java b/src/main/java/org/bukkit/UnsafeValues.java
index eb3397c45d37e5236155156cf3cdd49ea5e0a491..2fcae464aa3b036fa637a87742772aa0d1078362 100644
--- a/src/main/java/org/bukkit/UnsafeValues.java
+++ b/src/main/java/org/bukkit/UnsafeValues.java
@@ -257,4 +257,15 @@ public interface UnsafeValues {
      */
     boolean isCollidable(@org.jetbrains.annotations.NotNull Material material);
     // Paper end
+
+    // Daydream start
+    /**
+     * Create a Mojang's ByteBuf wrapper.
+     *
+     * @param buf byteBuf object to be wrapped
+     * @return the Wrapped ByteBuf object
+     */
+    @org.jetbrains.annotations.NotNull
+    moe.caramel.daydream.network.MojangByteBuf createByteBuf(@org.jetbrains.annotations.NotNull io.netty.buffer.ByteBuf buf);
+    // Daydream end
 }
diff --git a/src/main/java/org/bukkit/entity/Player.java b/src/main/java/org/bukkit/entity/Player.java
index d2a1c4ab984e713b1f1769d17bf01e01bea0bcb9..e9a5b81ba15e1a94e647a748c3ae198975530e32 100644
--- a/src/main/java/org/bukkit/entity/Player.java
+++ b/src/main/java/org/bukkit/entity/Player.java
@@ -645,6 +645,24 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
      */
     public void sendEquipmentChange(@NotNull LivingEntity entity, @NotNull EquipmentSlot slot, @NotNull ItemStack item);
 
+    // Daydream start
+    /**
+     * Send a custom query payload packet to this player
+     *
+     * @param channel The channel name
+     * @param value value
+     */
+    public void sendCustomPayload(@NotNull org.bukkit.NamespacedKey channel, @NotNull byte[] value);
+
+    /**
+     * Send a custom query payload packet to this player
+     *
+     * @param channel The channel name
+     * @param buf byte buf object
+     */
+    public void sendCustomPayload(@NotNull org.bukkit.NamespacedKey channel, @NotNull moe.caramel.daydream.network.MojangByteBuf buf);
+    // Daydream end
+
     // Paper start
     /**
      * Send a sign change. This fakes a sign change packet for a user at
