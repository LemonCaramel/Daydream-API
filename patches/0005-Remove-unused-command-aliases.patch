From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: LemonCaramel <admin@caramel.moe>
Date: Thu, 5 Aug 2021 19:36:12 +0900
Subject: [PATCH] Remove unused command aliases


diff --git a/src/main/java/org/bukkit/command/SimpleCommandMap.java b/src/main/java/org/bukkit/command/SimpleCommandMap.java
index 74252236b138969560e6513f24e7ecc6dc4a4127..978d5e293ed4bc29e0257fbb1b9ebe3d7aad7b79 100644
--- a/src/main/java/org/bukkit/command/SimpleCommandMap.java
+++ b/src/main/java/org/bukkit/command/SimpleCommandMap.java
@@ -256,47 +256,7 @@ public class SimpleCommandMap implements CommandMap {
         return Collections.unmodifiableCollection(knownCommands.values());
     }
 
-    public void registerServerAliases() {
-        Map<String, String[]> values = server.getCommandAliases();
-
-        for (Map.Entry<String, String[]> entry : values.entrySet()) {
-            String alias = entry.getKey();
-            if (alias.contains(" ")) {
-                server.getLogger().warning("Could not register alias " + alias + " because it contains illegal characters");
-                continue;
-            }
-
-            String[] commandStrings = entry.getValue();
-            List<String> targets = new ArrayList<String>();
-            StringBuilder bad = new StringBuilder();
-
-            for (String commandString : commandStrings) {
-                String[] commandArgs = commandString.split(" ");
-                Command command = getCommand(commandArgs[0]);
-
-                if (command == null) {
-                    if (bad.length() > 0) {
-                        bad.append(", ");
-                    }
-                    bad.append(commandString);
-                } else {
-                    targets.add(commandString);
-                }
-            }
-
-            if (bad.length() > 0) {
-                server.getLogger().warning("Could not register alias " + alias + " because it contains commands that do not exist: " + bad);
-                continue;
-            }
-
-            // We register these as commands so they have absolute priority.
-            if (targets.size() > 0) {
-                knownCommands.put(alias.toLowerCase(java.util.Locale.ENGLISH), new FormattedCommandAlias(alias.toLowerCase(java.util.Locale.ENGLISH), targets.toArray(new String[targets.size()])));
-            } else {
-                knownCommands.remove(alias.toLowerCase(java.util.Locale.ENGLISH));
-            }
-        }
-    }
+    public void registerServerAliases() {} // Daydream - for API Compatibility
 
     // Paper start - Expose Known Commands
     @NotNull
diff --git a/src/main/java/org/bukkit/command/defaults/ReloadCommand.java b/src/main/java/org/bukkit/command/defaults/ReloadCommand.java
index 0c7ba0718de2b93d013968ca0fec34ffd423990f..61b26d60912fedead2e80f6ffe300ca1e558460c 100644
--- a/src/main/java/org/bukkit/command/defaults/ReloadCommand.java
+++ b/src/main/java/org/bukkit/command/defaults/ReloadCommand.java
@@ -1,7 +1,6 @@
 package org.bukkit.command.defaults;
 
 import java.util.Arrays;
-import java.util.Collections;
 import java.util.List;
 import org.bukkit.Bukkit;
 import org.bukkit.ChatColor;
@@ -13,7 +12,7 @@ public class ReloadCommand extends BukkitCommand {
     public ReloadCommand(@NotNull String name) {
         super(name);
         this.description = "Reloads the server configuration and plugins";
-        this.usageMessage = "/reload [permissions|commands|confirm]"; // Paper
+        this.usageMessage = "/reload [permissions|confirm]"; // Paper // Daydream
         this.setPermission("bukkit.command.reload");
         this.setAliases(Arrays.asList("rl"));
     }
@@ -29,13 +28,6 @@ public class ReloadCommand extends BukkitCommand {
                 Bukkit.getServer().reloadPermissions();
                 Command.broadcastCommandMessage(sender, ChatColor.GREEN + "Permissions successfully reloaded.");
                 return true;
-            } else if ("commands".equalsIgnoreCase(args[0])) {
-                if (Bukkit.getServer().reloadCommandAliases()) {
-                    Command.broadcastCommandMessage(sender, ChatColor.GREEN + "Command aliases successfully reloaded.");
-                } else {
-                    Command.broadcastCommandMessage(sender, ChatColor.RED + "An error occurred while trying to reload command aliases.");
-                }
-                return true;
             } else if ("confirm".equalsIgnoreCase(args[0])) {
                 confirmed = true;
             } else {
@@ -60,6 +52,6 @@ public class ReloadCommand extends BukkitCommand {
     @NotNull
     @Override
     public List<String> tabComplete(@NotNull CommandSender sender, @NotNull String alias, @NotNull String[] args) throws IllegalArgumentException {
-        return com.google.common.collect.Lists.newArrayList("permissions", "commands"); // Paper
+        return com.google.common.collect.Lists.newArrayList("permissions"); // Paper // Daydream
     }
 }
