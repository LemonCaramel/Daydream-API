From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: LemonCaramel <admin@caramel.moe>
Date: Fri, 6 Aug 2021 20:08:04 +0900
Subject: [PATCH] Add more Player API


diff --git a/build.gradle.kts b/build.gradle.kts
index c669d3e5a8873194212c0033b27f00086cfce033..f307f49f7d163e0075a7367f42187710f811aa2f 100644
--- a/build.gradle.kts
+++ b/build.gradle.kts
@@ -56,6 +56,7 @@ dependencies {
     implementation("org.ow2.asm:asm-commons:9.5")
     // Paper end
     api("com.mojang:brigadier:1.2.9") // Daydream - Add Brigadier Command API
+    api("com.mojang:authlib:5.0.51") // Daydream - Mojang Authlib (keep in sync with major MC versions)
 
     api("org.apache.maven:maven-resolver-provider:3.9.6") // Paper - make API dependency for Paper Plugins
     compileOnly("org.apache.maven.resolver:maven-resolver-connector-basic:1.9.18")
diff --git a/src/main/java/org/bukkit/entity/Player.java b/src/main/java/org/bukkit/entity/Player.java
index 005edf5c525e795f0d1dcffa4129b6fc0f9c6d73..d22772f1d2077ba17b93a9f484ec4ec8220eae60 100644
--- a/src/main/java/org/bukkit/entity/Player.java
+++ b/src/main/java/org/bukkit/entity/Player.java
@@ -2552,6 +2552,104 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
      */
     org.bukkit.event.player.PlayerResourcePackStatusEvent.@Nullable Status getResourcePackStatus();
 
+    // Daydream start - Add more Player API
+    /**
+     * Sets the player's resource pack status.
+     *
+     * @param status new resource pack status
+     */
+    void setResourcePackStatus(@NotNull org.bukkit.event.player.PlayerResourcePackStatusEvent.Status status);
+
+    /**
+     * Request that the player's client download and switch resource packs.
+     * <p>
+     * The player's client will download the new resource pack asynchronously
+     * in the background, and will automatically switch to it once the
+     * download is complete. If the client has downloaded and cached the same
+     * resource pack in the past, it will perform a quick timestamp check
+     * over the network to determine if the resource pack has changed and
+     * needs to be downloaded again. When this request is sent for the very
+     * first time from a given server, the client will first display a
+     * confirmation GUI to the player before proceeding with the download.
+     * <p>
+     * Notes:
+     * <ul>
+     * <li>Players can disable server resources on their client, in which
+     *     case this method will have no affect on them.
+     * </ul>
+     *
+     * @param uuid Unique resource pack ID.
+     * @param url The URL from which the client will download the resource
+     *     pack. The string must contain only US-ASCII characters and should
+     *     be encoded as per RFC 1738.
+     * @param hash The sha1 hash sum of the resource pack file which is used
+     *     to apply a cached version of the pack directly without downloading
+     *     if it is available. Hast to be 20 bytes long!
+     * @param resourcePackPrompt A Prompt to be displayed in the client request
+     * @param required Marks if the resource pack should be required by the client
+     * @throws IllegalArgumentException Thrown if the URL is null.
+     * @throws IllegalArgumentException Thrown if the URL is too long. The
+     *     length restriction is an implementation specific arbitrary value.
+     */
+    default void pushResourcePack(@NotNull UUID uuid, @NotNull String url, byte @Nullable [] hash, net.kyori.adventure.text.@Nullable Component resourcePackPrompt, boolean required) {
+        this.pushResourcePack(uuid, url, (hash != null) ? com.google.common.io.BaseEncoding.base16().lowerCase().encode(hash) : "", resourcePackPrompt, required);
+    }
+
+    /**
+     * Request that the player's client download and switch resource packs.
+     * <p>
+     * The player's client will download the new resource pack asynchronously
+     * in the background, and will automatically switch to it once the
+     * download is complete. If the client has downloaded and cached the same
+     * resource pack in the past, it will perform a quick timestamp check
+     * over the network to determine if the resource pack has changed and
+     * needs to be downloaded again. When this request is sent for the very
+     * first time from a given server, the client will first display a
+     * confirmation GUI to the player before proceeding with the download.
+     * <p>
+     * Notes:
+     * <ul>
+     * <li>Players can disable server resources on their client, in which
+     *     case this method will have no affect on them.
+     * </ul>
+     *
+     * @param uuid Unique resource pack ID.
+     * @param url The URL from which the client will download the resource
+     *     pack. The string must contain only US-ASCII characters and should
+     *     be encoded as per RFC 1738.
+     * @param hash A 40 character hexadecimal and lowercase SHA-1 digest of
+     *     the resource pack file.
+     * @param resourcePackPrompt A Prompt to be displayed in the client request
+     * @param required Marks if the resource pack should be required by the client
+     * @throws IllegalArgumentException Thrown if the URL is null.
+     * @throws IllegalArgumentException Thrown if the URL is too long. The
+     *     length restriction is an implementation specific arbitrary value.
+     */
+    void pushResourcePack(@NotNull UUID uuid, @NotNull String url, @NotNull String hash, net.kyori.adventure.text.@Nullable Component resourcePackPrompt, boolean required);
+
+    /**
+     * 리소스팩 적용을 해제합니다.
+     *
+     * @param uuid 리소스팩의 고유 ID. {@code null}인 경우 모든 리소스팩 적용을 해제합니다.
+     */
+    void popResourcePack(@Nullable UUID uuid);
+
+    /**
+     * 적용된 리소스팩 목록을 가져옵니다.
+     *
+     * @return 리소스팩 목록
+     */
+    @NotNull java.util.Set<@NotNull UUID> getAppliedResourcePacks();
+
+    /**
+     * 리소스팩 적용 상태를 가져옵니다.
+     *
+     * @param uuid 리소스팩의 고유 ID
+     * @return 적용을 하지 않았거나, 클라이언트에게 응답을 받지 않은 경우 {@code null}을 반환할 수도 있습니다.
+     */
+    @Nullable org.bukkit.event.player.PlayerResourcePackStatusEvent.Status getResourcePackStatus(@NotNull UUID uuid);
+    // Daydream end - Add more Player API
+
     /**
      * Gets the most recent pack hash from the player.
      *
@@ -3158,6 +3256,16 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
     }
     // Paper end
 
+    // Daydream start - Add more Player API
+    /**
+     * Gets this player's game profile.
+     *
+     * @return player's game profile object
+     */
+    @NotNull
+    com.mojang.authlib.GameProfile getProfile();
+    // Daydream end - Add more Player API
+
     // Paper start - Player Profile API
     /**
      * Gets a copy of this players profile
