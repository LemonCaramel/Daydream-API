From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: LemonCaramel <admin@caramel.moe>
Date: Sun, 10 Dec 2023 16:28:01 +0900
Subject: [PATCH] Add Client Detector


diff --git a/src/main/java/moe/caramel/daydream/event/configuration/ConfigurationClientTypeDetectedEvent.java b/src/main/java/moe/caramel/daydream/event/configuration/ConfigurationClientTypeDetectedEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..2785b263d3fc5dfe21f59559b5e27c5c522ba0ca
--- /dev/null
+++ b/src/main/java/moe/caramel/daydream/event/configuration/ConfigurationClientTypeDetectedEvent.java
@@ -0,0 +1,72 @@
+package moe.caramel.daydream.event.configuration;
+
+import moe.caramel.daydream.player.ClientType;
+import net.kyori.adventure.text.Component;
+import org.bukkit.entity.Player;
+import org.bukkit.event.HandlerList;
+import org.jetbrains.annotations.ApiStatus;
+import org.jspecify.annotations.NullMarked;
+import org.jspecify.annotations.Nullable;
+
+/**
+ * Configuration 페이즈에서 플레이어의 클라이언트 종류를 감지 완료하였을 때 호출됩니다.
+ */
+@NullMarked
+public final class ConfigurationClientTypeDetectedEvent extends ConfigurationEvent {
+
+    private @Nullable Component disconnectReason;
+
+    @ApiStatus.Internal
+    public ConfigurationClientTypeDetectedEvent(final Player who) {
+        super(who);
+    }
+
+    /**
+     * 감지된 클라이언트의 타입을 가져옵니다.
+     *
+     * @return 클라이언트의 타입
+     */
+    public ClientType clientType() {
+        return player.getClientType();
+    }
+
+    /**
+     * 클라이언트의 브랜드 이름을 가져옵니다.
+     *
+     * @return 브랜드 이름 (수정된 클라이언트가 서버로 정보를 전송하지 않을 수도 있음)
+     */
+    public @Nullable String clientBrandName() {
+        return player.getClientBrandName();
+    }
+
+    /**
+     * 플레이어 추방 사유를 가져옵니다.
+     *
+     * @return 플레이어 추방 사유
+     */
+    public @Nullable Component disconnectReason() {
+        return disconnectReason;
+    }
+
+    /**
+     * 플레이어를 서버에서 추방하기로 큰 결심을 한 경우, 추방 사유를 설정합니다.
+     *
+     * @param disconnectReason 플레이어 추방 사유 ({@code null}인 경우 추방하지 않습니다.)
+     */
+    public void disconnectReason(final @Nullable Component disconnectReason) {
+        this.disconnectReason = disconnectReason;
+    }
+
+    //<editor-fold desc="Bukkit Event Handler (Internal)" defaultstate="collapsed">
+    private static final HandlerList HANDLER_LIST = new HandlerList();
+
+    @Override
+    public HandlerList getHandlers() {
+        return HANDLER_LIST;
+    }
+
+    public static HandlerList getHandlerList() {
+        return HANDLER_LIST;
+    }
+    //</editor-fold>
+}
diff --git a/src/main/java/moe/caramel/daydream/player/ClientType.java b/src/main/java/moe/caramel/daydream/player/ClientType.java
new file mode 100644
index 0000000000000000000000000000000000000000..963d3aa970ef24bafd2aaa17bde4b8c2bed88c57
--- /dev/null
+++ b/src/main/java/moe/caramel/daydream/player/ClientType.java
@@ -0,0 +1,34 @@
+package moe.caramel.daydream.player;
+
+/**
+ * 클라이언트 타입
+ */
+public enum ClientType {
+
+    /**
+     * 바닐라 클라이언트 또는 알 수 없는 클라이언트
+     */
+    VANILLA,
+    /**
+     * 모드 로더이지만 자세히는 알 수 없음
+     */
+    UNKNOWN_CLIENT,
+
+    /**
+     * Fabric 모드 로더
+     */
+    FABRIC,
+    /**
+     * Quilt 모드 로더
+     */
+    QUILT,
+
+    /**
+     * Forge 모드 로더
+     */
+    FORGE,
+    /**
+     * NeoForge 모드 로더
+     */
+    NEOFORGE,
+}
diff --git a/src/main/java/org/bukkit/entity/Player.java b/src/main/java/org/bukkit/entity/Player.java
index a675aad451521c148f459705748ae5137789a358..1cf2403d640d5b54b6733c0893a2f1035f99708a 100644
--- a/src/main/java/org/bukkit/entity/Player.java
+++ b/src/main/java/org/bukkit/entity/Player.java
@@ -3875,6 +3875,19 @@ public interface Player extends HumanEntity, Conversable, OfflinePlayer, PluginM
     String getClientBrandName();
     // Paper end
 
+    // Daydream start - (feature) Add Client Detector
+    /**
+     * 서버에서 감지한 클라이언트의 종류를 가져옵니다.
+     * <p>
+     * Daydream 설정에서 감지가 비활성화 되었거나, 아직 프로세스를
+     * 시작하지 않은 경우 {@link moe.caramel.daydream.player.ClientType#VANILLA}를 반환합니다.
+     *
+     * @return 클라이언트의 종류
+     */
+    @NotNull
+    moe.caramel.daydream.player.ClientType getClientType();
+    // Daydream end - (feature) Add Client Detector
+
     // Paper start - Teleport API
     /**
      * Sets the player's rotation.
